<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seektop.fund.mapper.GlWithdrawMapper">
    <resultMap id="BaseResultMap" type="com.seektop.fund.model.GlWithdraw">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_type" jdbcType="INTEGER" property="userType"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="coin" jdbcType="VARCHAR" property="coin"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="fee" jdbcType="DECIMAL" property="fee"/>
        <result column="bank_id" jdbcType="INTEGER" property="bankId"/>
        <result column="bank_name" jdbcType="VARCHAR" property="bankName"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="card_no" jdbcType="VARCHAR" property="cardNo"/>
        <result column="transfer_name" jdbcType="VARCHAR" property="transferName"/>
        <result column="transfer_bank_name" jdbcType="VARCHAR" property="transferBankName"/>
        <result column="transfer_bank_card_no" jdbcType="VARCHAR" property="transferBankCardNo"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="risk_type" jdbcType="INTEGER" property="riskType"/>
        <result column="client_type" jdbcType="INTEGER" property="clientType"/>
        <result column="withdraw_type" jdbcType="INTEGER" property="withdrawType"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate"/>
        <result column="risk_approver" jdbcType="VARCHAR" property="riskApprover"/>
        <result column="risk_apv_time" jdbcType="TIMESTAMP" property="riskApvTime"/>
        <result column="risk_apv_remark" jdbcType="VARCHAR" property="riskApvRemark"/>
        <result column="approver" jdbcType="VARCHAR" property="approver"/>
        <result column="approve_time" jdbcType="TIMESTAMP" property="approveTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="merchant" jdbcType="VARCHAR" property="merchant"/>
        <result column="merchant_code" jdbcType="VARCHAR" property="merchantCode"/>
        <result column="merchant_id" jdbcType="INTEGER" property="merchantId"/>
        <result column="user_level" jdbcType="VARCHAR" property="userLevel"/>
        <result column="third_order_id" jdbcType="VARCHAR" property="thirdOrderId"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <result column="free_status" jdbcType="INTEGER" property="freeStatus"/>
        <result column="aisle_type" jdbcType="INTEGER" property="aisleType"/>
        <result column="split_status" jdbcType="INTEGER" property="splitStatus"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="batch_number" jdbcType="VARCHAR" property="batchNumber"/>
        <result column="seperate_creator" jdbcType="VARCHAR" property="seperateCreator"/>
        <result column="seperator" jdbcType="VARCHAR" property="seperator"/>
        <result column="seperate_date" jdbcType="TIMESTAMP" property="seperateDate"/>
        <result column="seperate_reason" jdbcType="VARCHAR" property="seperateReason"/>
        <result column="reject_reason" jdbcType="VARCHAR" property="rejectReason"/>
        <result column="tx_hash" jdbcType="VARCHAR" property="txHash"/>
    </resultMap>

    <resultMap id="withdrawVOMap" type="com.seektop.fund.vo.WithdrawVO" extends="BaseResultMap">

    </resultMap>

    <resultMap id="getWithdrawListResultMap" type="com.seektop.fund.vo.GlWithdrawDetailDto">
        <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_type" jdbcType="INTEGER" property="userType"/>
        <result column="username" jdbcType="INTEGER" property="userName"/>
        <result column="user_level" jdbcType="VARCHAR" property="userLevel"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="fee" jdbcType="DECIMAL" property="fee"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="transfer_bank_card_no" jdbcType="VARCHAR" property="transferBankCardNo"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="withdraw_type" jdbcType="INTEGER" property="withdrawType"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate"/>
        <result column="aisle_type" jdbcType="INTEGER" property="aisleType"/>
        <result column="split_status" jdbcType="INTEGER" property="splitStatus"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="channel_id" jdbcType="INTEGER" property="channelId"/>
        <result column="channel_name" jdbcType="VARCHAR" property="channelName"/>
        <result column="transfer_name" jdbcType="VARCHAR" property="transferName"/>
        <result column="transfer_bank_name" jdbcType="VARCHAR" property="transferBankName"/>
        <result column="merchant" jdbcType="VARCHAR" property="merchant"/>
        <result column="merchant_code" jdbcType="VARCHAR" property="merchantCode"/>
        <result column="approve_time" jdbcType="TIMESTAMP" property="approveTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>

    <resultMap id="WithdrawRecordCollectResultMap" type="com.seektop.fund.vo.GlWithdrawAllCollect">
        <result column="withdrawAmountCollect" property="withdrawAmountCollect" jdbcType="DECIMAL"/>
        <result column="handlingFeeAmountCollect" property="handlingFeeAmountCollect" jdbcType="DECIMAL"/>
        <result column="arrivalAmountCollect" property="arrivalAmountCollect" jdbcType="DECIMAL"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="base_query">
        SELECT
        order_id,
        user_id,
        user_type,
        username,
        coin,
        amount,
        fee,
        bank_id,
        bank_name,
        name,
        card_no,
        address,
        risk_type,
        client_type,
        withdraw_type,
        status,
        create_date,
        last_update,
        risk_approver,
        risk_apv_time,
        risk_apv_remark,
        approver,
        approve_time,
        remark,
        merchant,
        merchant_code,
        merchant_id,
        user_level,
        third_order_id,
        tag,
        free_status,
        aisle_type,
        split_status,
        ip,
        batch_number,
        seperate_creator,
        seperator,
        seperate_date,
        seperate_reason,
        reject_reason,
        transfer_name,
        transfer_bank_name,
        transfer_bank_card_no
        FROM
        gl_withdraw
    </sql>

    <select id="selectForUpdate" resultMap="BaseResultMap">
        select * from gl_withdraw where order_id = #{orderId} for update
    </select>

    <update id="updateWithdraw">
        update gl_withdraw
        <trim prefix="SET" suffixOverrides=",">
            <if test="withdraw.status != null">
                status = #{withdraw.status},
            </if>
            <if test="withdraw.approver != null">
                approver = #{withdraw.approver},
            </if>
            <if test="withdraw.approveTime != null">
                approve_time = #{withdraw.approveTime},
            </if>
            <if test="withdraw.lastUpdate != null">
                last_update = #{withdraw.lastUpdate},
            </if>
            <if test="withdraw.merchant != null">
                merchant = #{withdraw.merchant},
            </if>
            <if test="withdraw.merchantCode != null">
                merchant_code = #{withdraw.merchantCode},
            </if>
            <if test="withdraw.merchantId != null">
                merchant_id = #{withdraw.merchantId},
            </if>
            <if test="withdraw.remark != null">
                remark = #{withdraw.remark},
            </if>
            <if test="withdraw.thirdOrderId != null">
                third_order_id = #{withdraw.thirdOrderId},
            </if>
            <if test="withdraw.withdrawType != null">
                withdraw_type = #{withdraw.withdrawType},
            </if>
            <if test="withdraw.rejectReason != null">
                reject_reason = #{withdraw.rejectReason},
            </if>
            <if test="withdraw.transferName != null">
                transfer_name = #{withdraw.transferName},
            </if>
            <if test="withdraw.transferBankName != null">
                transfer_bank_name = #{withdraw.transferBankName},
            </if>
            <if test="withdraw.transferBankCardNo != null">
                transfer_bank_card_no = #{withdraw.transferBankCardNo},
            </if>
        </trim>
        where order_id = #{withdraw.orderId}
    </update>


    <select id="selectByOrderIds" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT * from gl_withdraw
        WHERE order_id IN (
        <foreach collection="list" item="orderId" index="index" separator=",">
            #{orderId}
        </foreach>
        )
    </select>

    <select id="getWithdrawAmountTotal" parameterType="java.util.HashMap" resultType="java.math.BigDecimal">
        select IFNULL(sum(amount),0) from gl_withdraw
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>

            <if test="status != null">
                and status in
                <foreach collection="status" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startDate != null and endDate != null">
                and <![CDATA[ create_date >= #{startDate} and create_date <= #{endDate}]]>
            </if>
        </where>
    </select>

    <select id="selectCountByFirstAmountRisk" parameterType="java.util.HashMap" resultType="int">
        select count(*) from gl_withdraw
        where user_id = #{userId}
        and create_date >= #{createDate}
        and status in (1,8)
        and risk_type like '%1%'
    </select>

    <select id="getLastWithdraw" resultMap="BaseResultMap">
        select * from gl_withdraw
        where user_id = #{userId}
        order by create_date desc limit 1 offset 0
    </select>

    <select id="getWithdrawList" parameterType="map" resultMap="getWithdrawListResultMap">
        SELECT
        gw.user_id,
        gw.order_id,
        gw.user_type,
        gw.username,
        gw.user_level,
        gw.amount,
        gw.fee,
        gw.name,
        gw.transfer_bank_card_no,
        gw.address,
        gw.withdraw_type,
        gw.status,
        gw.create_date,
        gw.last_update,
        gw.aisle_type,
        gw.split_status,
        gw.ip,
        gwmc.channel_id,
        gwmc.channel_name,
        gw.transfer_name,
        gw.transfer_bank_name,
        gw.merchant,
        gw.merchant_code,
        gw.approve_time,
        gw.remark
        FROM
        gl_withdraw gw
        LEFT JOIN
        gl_withdraw_merchantaccount gwmc ON gwmc.merchant_id = gw.merchant_id
        WHERE
        gw.status IN (1 , 8)
        and <![CDATA[(gw.last_update >= #{startTime} and gw.last_update <= #{endTime})]]>
        <if test="merchantCode != null and merchantCode != ''">
            and gw.merchant_code = #{merchantCode}
        </if>

        <if test="channelId != null and channelId != -2">
            and gwmc.channel_id = #{channelId}
        </if>

        <if test="channelId == -2">
            and gw.withdraw_type = 0
        </if>

        <if test="coin != null">
            and gw.coin = #{coin}
        </if>
    </select>

    <!--提现订单记录分页查询 -->
    <select id="getWithdrawByPage" parameterType="com.seektop.fund.vo.GlWithdrawQueryDto"
            resultMap="withdrawVOMap">
        SELECT
        order_id,
        user_id,
        user_type,
        username,
        coin,
        amount,
        fee,
        bank_id,
        bank_name,
        name,
        card_no,
        address,
        risk_type,
        client_type,
        withdraw_type,
        status,
        create_date,
        last_update,
        risk_approver,
        risk_apv_time,
        risk_apv_remark,
        approver,
        approve_time,
        remark,
        merchant,
        merchant_code,
        merchant_id,
        user_level,
        third_order_id,
        tag,
        free_status,
        aisle_type,
        split_status,
        ip,
        batch_number,
        seperate_creator,
        seperator,
        seperate_date,
        seperate_reason,
        reject_reason,
        transfer_name,
        transfer_bank_name,
        transfer_bank_card_no,
        tx_hash
        FROM
        gl_withdraw
        <where>
            <include refid="withdrawWhereSql"/>
        </where>
        <choose>
            <when test="orderByClause != null ">
                order by ${orderByClause} ${sortStr}
            </when>
            <otherwise>
                order by create_date desc
            </otherwise>
        </choose>
    </select>

    <sql id="withdrawWhereSql">
        <if test="needName == 1">
            and user_id = #{userId}
        </if>
        <if test="orderId != null and orderId != ''">
            and order_id = #{orderId}
        </if>
        <if test="orderId == null or orderId == ''">
            <if test="userId != null and userId !=''">
                and user_id = #{userId}
            </if>
            <if test="userIdList != null and userIdList.size() > 0">
                and user_id in
                <foreach collection="userIdList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <!--提现时间 -->
            <if test="dateType == 1 and startTime != null and endTime != null">
                and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
            </if>
            <!--出款时间-->
            <if test="dateType == 2 and startTime != null and endTime != null">
                and <![CDATA[(last_update >= #{startTime} and  last_update <= #{endTime})]]>
                and status in (1,8)
            </if>
            <!--出款类型-->
            <if test="withdrawType != null">
                and withdraw_type = #{withdrawType}
            </if>
            <if test="withdrawStatus != null and withdrawStatus.size() > 0">
                and status in
                <foreach collection="withdrawStatus" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="merchant != null and merchant != ''">
                and merchant = #{merchant}
            </if>
            <if test="merchantId != null and merchantId != ''">
                and merchant_id = #{merchantId}
            </if>
            <if test="userType != null and userType >= 0">
                and user_type = #{userType}
            </if>
            <if test="clientTypeList != null and clientTypeList.size() > 0">
                and client_type in
                <foreach collection="clientTypeList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="minAmount != null and minAmount > 0">
                and amount >= #{minAmount}
            </if>
            <if test="maxAmount != null and maxAmount > 0">
                and <![CDATA[amount <= #{maxAmount}]]>
            </if>
            <if test="aisleType != null ">
                and <![CDATA[ aisle_type in (${aisleType})]]>
            </if>
            <if test="coinCode != null and coinCode != '-1'">
                and coin = #{coinCode}
            </if>
        </if>
    </sql>

    <select id="getWithdrawSeparatePageList" resultMap="BaseResultMap"
            parameterType="com.seektop.fund.vo.GlWithdrawQueryDto">
        <include refid="base_query"></include>
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
                and status in (0,7)
            </if>
            <if test="orderId == null or orderId == ''">
                <if test="userId != null and userId !=''">
                    and user_id = #{userId}
                </if>

                <if test="startTime != null and endTime != null">
                    and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
                </if>
                <if test="status == null or status == ''">
                    and status in (0,7)
                </if>
                <if test="status != null and status != ''">
                    and status = #{status}
                </if>
                <if test="withdrawType != null">
                    and withdraw_type = #{withdrawType}
                </if>
                <if test="userType != null and userType >= 0">
                    and user_type = #{userType}
                </if>
                <if test="seperator != null and seperator != ''">
                    and seperator = #{seperator}
                </if>
                <if test="separateStatus != null and separateStatus != ''">
                    <if test="separateStatus == 0">
                        and seperator IS NOT NULL
                    </if>
                    <if test="separateStatus == 1 ">
                        and seperator IS NULL
                    </if>
                </if>
            </if>
        </where>
        order by create_date desc
    </select>


    <!--提现出款列表查询-->
    <select id="getTransferRecord"
            parameterType="com.seektop.fund.vo.WithdrawRecordListQueryDO"
            resultMap="BaseResultMap">
        SELECT
        order_id,
        user_id,
        user_type,
        username,
        amount,
        fee,
        bank_id,
        bank_name,
        name,
        card_no,
        address,
        risk_type,
        client_type,
        withdraw_type,
        status,
        create_date,
        last_update,
        risk_approver,
        risk_apv_time,
        risk_apv_remark,
        approver,
        approve_time,
        remark,
        merchant,
        merchant_code,
        merchant_id,
        user_level,
        third_order_id,
        tag,
        free_status,
        aisle_type,
        split_status,
        ip,
        batch_number,
        seperate_creator,
        seperator,
        seperate_date,
        seperate_reason,
        reject_reason,
        transfer_name,
        transfer_bank_name,
        transfer_bank_card_no,
        coin
        FROM gl_withdraw
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
                ORDER BY create_date desc
            </if>
            <if test="orderId == null or orderId == ''">
                <if test="userId != null and userId !=''">
                    and user_id = #{userId}
                </if>
                <if test="startTime != null and endTime != null">
                    and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
                </if>
                <if test="minAmount != null and minAmount > 0">
                    and amount >= #{minAmount}
                </if>
                <if test="maxAmount != null and maxAmount > 0">
                    and <![CDATA[amount <= #{maxAmount}]]>
                </if>
                <if test="userType != null and userType != -1">
                    and user_type = #{userType}
                </if>
                <if test="status != null">
                    and status = #{status}
                </if>
                <if test="withdrawType != null">
                    and withdraw_type =#{withdrawType}
                </if>
                <if test="bankId != null and bankId !=''">
                    and bank_id = #{bankId}
                </if>
                <if test="bankUserName != null and bankUserName != ''">
                    and name = #{bankUserName}
                </if>
                <if test="merchant != null and merchant != ''">
                    and merchant = #{merchant}
                </if>
                <if test="coinCode != null and coinCode != '-1' ">
                    and coin = #{coinCode}
                </if>
                <if test="transferStatus == 0">
                    and status in (0,7) ORDER BY create_date desc
                </if>
                <if test="transferStatus == 1">
                    and status in (1,2,3,4,5,6,8,9) ORDER BY approve_time desc
                </if>
            </if>
        </where>
    </select>

    <!--提现出款列表查询-->
    <select id="getTransferRecordSum"
            parameterType="com.seektop.fund.vo.WithdrawRecordListQueryDO"
        resultType="com.seektop.fund.vo.GlWithdrawAllCollect">
        SELECT coin as coinCode,
        amount AS withdrawAmountCollect,
        fee AS handlingFeeAmountCollect
        FROM gl_withdraw
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
                ORDER BY create_date desc
            </if>
            <if test="orderId == null or orderId == ''">
                <if test="userId != null and userId !=''">
                    and user_id = #{userId}
                </if>
                <if test="startTime != null and endTime != null">
                    and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
                </if>
                <if test="minAmount != null and minAmount > 0">
                    and amount >= #{minAmount}
                </if>
                <if test="maxAmount != null and maxAmount > 0">
                    and <![CDATA[amount <= #{maxAmount}]]>
                </if>
                <if test="userType != null and userType != -1">
                    and user_type = #{userType}
                </if>
                <if test="status != null">
                    and status = #{status}
                </if>
                <if test="withdrawType != null">
                    and withdraw_type =#{withdrawType}
                </if>
                <if test="bankId != null and bankId !=''">
                    and bank_id = #{bankId}
                </if>
                <if test="bankUserName != null and bankUserName != ''">
                    and name = #{bankUserName}
                </if>
                <if test="merchant != null and merchant != ''">
                    and merchant = #{merchant}
                </if>
                <if test="coinCode != null and coinCode != '-1' ">
                    and coin = #{coinCode}
                </if>
                <if test="transferStatus == 0">
                    and status in (0,7) ORDER BY create_date desc
                </if>
                <if test="transferStatus == 1">
                    and status in (1,2,3,4,5,6,8,9) ORDER BY approve_time desc
                </if>
            </if>
        </where>
    </select>


    <select id="getWithdrawCollect" parameterType="com.seektop.fund.vo.GlWithdrawQueryDto"
            resultType="com.seektop.fund.vo.GlWithdrawAllCollect">
        SELECT coin as coinCode,
        amount AS withdrawAmountCollect,
        fee AS handlingFeeAmountCollect
        FROM gl_withdraw
        <where>
            <include refid="withdrawWhereSql"/>
            <if test="orderId != null and orderId != ''">
                <if test="withdrawStatus != null and withdrawStatus.size() > 0">
                    and status in
                    <foreach collection="withdrawStatus" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            </if>
        </where>
    </select>

    <select id="findWithdrawList" resultMap="BaseResultMap"
            parameterType="com.seektop.fund.vo.GlWithdrawQueryDto">
        <include refid="base_query"></include>
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="orderId == null or orderId == ''">
                <if test="userId != null and userId !=''">
                    and user_id = #{userId}
                </if>
                <if test="userIdList != null and userIdList.size() > 0">
                    and user_id in
                    <foreach collection="userIdList" item="item" index="index" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </if>
                <if test="withdrawType != null and withdrawType != -1">
                    and withdraw_type = #{withdrawType}
                </if>
                <if test="seperator != null and seperator != ''">
                    and seperator = #{seperator}
                </if>
                <!-- 提现时间 -->
                <if test="dateType != null and dateType == 1">
                    and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
                </if>
                <if test="withdrawStatus != null and withdrawStatus.size() > 0">
                    and status in
                    <foreach collection="withdrawStatus" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <!-- 出款时间 -->
                <if test="dateType != null and dateType == 2">
                    and <![CDATA[(approve_time >= #{startTime} and  approve_time <= #{endTime})]]>
                </if>
                <if test="merchant != null and merchant != ''">
                    and merchant = #{merchant}
                </if>
                <!-- 风控审核时间 -->
                <if test="dateType != null and dateType == 3">
                    and <![CDATA[(risk_apv_time >= #{startTime} and  risk_apv_time <= #{endTime})]]>
                </if>
                <!-- 分单时间 -->
                <if test="dateType != null and dateType == 4">
                    and <![CDATA[(seperate_date >= #{startTime} and  seperate_date <= #{endTime})]]>
                </if>

                <if test="userType != -1">
                    and user_type = #{userType}
                </if>
                <if test="approver != null and approver != ''">
                    and approver = #{approver}
                </if>
                <if test="thirdOrderId != null and thirdOrderId != ''">
                    and third_order_id = #{thirdOrderId}
                </if>
                <if test="tag != null and tag != ''">
                    and tag = #{tag}
                </if>
                <if test="merchantCode != null and merchantCode != ''">
                    and merchant_code = #{merchantCode}
                </if>
                <if test="riskApprover != null and riskApprover != ''">
                    and risk_approver = #{riskApprover}
                </if>
                <if test="seperateCreator != null and seperateCreator != ''">
                    and seperate_creator = #{seperateCreator}
                </if>
                <if test="minAmount != null">
                    and amount &gt;= #{minAmount}
                </if>
                <if test="maxAmount != null">
                    and amount &lt;= #{maxAmount}
                </if>
                <if test="bankId != null and bankId != -1">
                    and bank_id = #{bankId}
                </if>
                <if test="cardNo != null">
                    and card_no = #{cardNo}
                </if>
                <if test="clientType != null and clientType != -1">
                    and client_type = #{clientType}
                </if>
                <if test="aisleType != null">
                    and aisle_type = #{aisleType}
                </if>
                <if test="separateStatus != null and separateStatus != ''">
                    <if test="separateStatus == 0">
                        and seperator IS NOT NULL
                    </if>
                    <if test="separateStatus == 1 ">
                        and seperator IS NULL
                    </if>
                </if>
            </if>
        </where>
        order by create_date desc
    </select>

    <update id="updateRemark">
        update gl_withdraw set remark = #{remark} where order_id = #{orderId}
    </update>


    <select id="getUserLastWithdrawInfo" resultMap="BaseResultMap"
            parameterType="com.seektop.fund.vo.GlWithdrawQueryDto">
        <include refid="base_query"></include>
        <where>
            <if test="userId != null and userId !=''">
                and user_id = #{userId}
            </if>
            <if test="withdrawStatus != null and withdrawStatus.size() > 0">
                and status in
                <foreach collection="withdrawStatus" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ORDER BY create_date DESC
        LIMIT 1;
    </select>


    <!--提现订单记录总金额和统计笔数 -->
    <select id="memberWithdrawTotal" parameterType="com.seektop.fund.vo.GlWithdrawQueryDto"
            resultMap="WithdrawRecordCollectResultMap">
        SELECT
        count(*)as count,
        IFNULL(sum(amount),0) as withdrawAmountCollect,
        IFNULL(sum(fee),0) as handlingFeeAmountCollect,
        IFNULL(
        sum(
        CASE WHEN
        status in (1,8)
        THEN
        amount - fee
        ELSE
        0
        END
        ),0) as arrivalAmountCollect FROM gl_withdraw
        <where>
            <if test="needName == 1">
                and user_id = #{userId}
            </if>
            <choose>
                <when test="orderId != null and orderId != ''">
                    and order_id = #{orderId}
                </when>
                <otherwise>
                    <if test="userId != null and userId !=''">
                        and user_id = #{userId}
                    </if>
                    <if test="userIdList != null and userIdList.size() > 0">
                        and user_id in
                        <foreach collection="userIdList" item="item" index="index" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                    </if>
                    <if test="startTime != null and endTime != null">
                        and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
                    </if>
                    <if test="merchant != null and merchant != ''">
                        and merchant = #{merchant}
                    </if>
                    <if test="withdrawStatus != null">
                        and status in
                        <foreach collection="withdrawStatus" index="index" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="clientTypeList != null and clientTypeList.size() > 0">
                        and client_type in
                        <foreach collection="clientTypeList" item="item" index="index" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                    </if>
                    <if test="userType != null and userType >= 0">
                        and user_type = #{userType}
                    </if>
                    <if test="withdrawType != null">
                        and withdraw_type = #{withdrawType}
                    </if>
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="findWithdrawExceptionList" parameterType="com.seektop.fund.vo.WithdrawExceptionQueryDto"
            resultMap="withdrawVOMap">
        <include refid="base_exception_query"/>
        <include refid="query_condition"/>

        ORDER BY create_date
        <choose>
            <when test="sortStr != null and sortStr == 'ascend'"> asc </when>
            <otherwise> desc </otherwise>
        </choose>
    </select>

    <sql id="base_exception_query">
        SELECT
        w.order_id,
        w.user_id,
        w.user_type,
        w.username,
        w.coin,
        w.amount,
        w.fee,
        w.bank_id,
        w.bank_name,
        w.name,
        w.card_no,
        w.address,
        w.risk_type,
        w.client_type,
        w.withdraw_type,
        w.status,
        w.create_date,
        w.last_update,
        w.risk_approver,
        w.risk_apv_time,
        w.risk_apv_remark,
        w.approver,
        w.approve_time,
        w.remark,
        w.merchant,
        w.merchant_code,
        w.merchant_id,
        w.user_level,
        w.third_order_id,
        w.tag,
        w.free_status,
        w.aisle_type,
        w.split_status,
        w.ip,
        w.batch_number,
        w.seperate_creator,
        w.seperator,
        w.seperate_date,
        w.seperate_reason,
        w.reject_reason,
        w.transfer_name,
        w.transfer_bank_name,
        w.transfer_bank_card_no,
        w.coin
        FROM
        gl_withdraw w left join gl_user u on w.user_id = u.id
    </sql>

    <sql id="query_condition">
        <where>
            <if test="userIds != null and userIds.size() == 1">
                <bind name="userId" value="userIds.get(0)"/>
                and w.user_id = #{userId}
            </if>
            <if test="userIds != null and userIds.size() > 1">
                and w.user_id in
                <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startTime != null and endTime != null">
                <if test="dateType == 1">
                    and <![CDATA[(w.create_date >= #{startTime} and  w.create_date <= #{endTime})]]>
                </if>
            </if>

            <if test="minAmount != null">
                and w.amount &gt;= #{minAmount}
            </if>
            <if test="maxAmount != null">
                and w.amount &lt;= #{maxAmount}
            </if>
            <if test="userType != null and userType != -1">
                and w.user_type = #{userType}
            </if>
            <if test="userTypes != null and userTypes.size() >= 1">
                <choose>
                    <when test="userTypes.contains(-1) or userTypes.size() >= 3">

                    </when>
                    <otherwise>
                        <if test="userTypes.contains(0) and userTypes.size() == 1">
                            and w.user_type = 0
                            and #{queryTime} &lt;= SUBDATE(u.register_date,interval -7 day)
                        </if>
                        <if test="userTypes.contains(2) and userTypes.size() == 1">
                            and w.user_type = 0
                            and #{queryTime} &gt; SUBDATE(u.register_date,interval -7 day)
                        </if>
                        <if test="userTypes.contains(2) and userTypes.contains(0) and userTypes.size() == 2">
                            and w.user_type = 0
                        </if>
                        <if test="userTypes.contains(1)">
                            and w.user_type = 1
                        </if>
                    </otherwise>
                </choose>
            </if>
            <if test="clientType != -1">
                and w.client_type = #{clientType}
            </if>
            <if test="status != -1">
                <if test="status == 0">
                    and w.status >= 0
                </if>
                <if test="status != 0">
                    and w.status = #{status}
                </if>
            </if>
            <if test="keywords != null">
                <choose>
                    <when test="searchType == 1">
                        and w.order_id = #{keywords}
                    </when>
                    <when test="searchType == 3">
                        and w.risk_approver = #{keywords}
                    </when>
                </choose>
            </if>
            <if test="aisleType != null">
                and w.aisle_type = #{aisleType}
            </if>
            <if test="userLevel != null and userLevel.size() == 1">
                <bind name="bindUserLevel" value="userLevel.get(0)"/>
                and w.user_level = #{bindUserLevel}
            </if>
            <if test="userLevel != null and userLevel.size() > 1">
                and w.user_level in
                <foreach collection="userLevel" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            and w.risk_type NOT LIKE '[0]'
            <if test="riskType != null and riskType.size() != 0">
                and
                <foreach collection="riskType" index="index" item="item" open="(" separator="or" close=")">
                    w.risk_type like CONCAT('%',#{item},'%')
                </foreach>
            </if>
            <if test="coinCode != null and coinCode != '-1'">
                and w.coin = #{coinCode}
            </if>
        </where>
    </sql>

    <select id="findWithdrawByOrderId" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT * from gl_withdraw
        WHERE order_id IN (
        <foreach collection="list" item="orderId" index="index" separator=",">
            #{orderId}
        </foreach>
        )
    </select>

    <select id="sumNormalWithdrawCount" resultType="integer" parameterType="java.util.HashMap">
        select count(*) from gl_withdraw
        where user_id = #{userId}
        and aisle_type = 1 and coin = #{coin}
        and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
        and status in (1,8,14)
    </select>
</mapper>