<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seektop.fund.mapper.ProxyCreditLogMapper">
    <resultMap id="BaseResultMap" type="com.seektop.fund.model.ProxyCreditLog">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId"/>
        <result column="proxy_user_name" jdbcType="VARCHAR" property="proxyUserName"/>
        <result column="credited_amount_before" jdbcType="DECIMAL" property="creditedAmountBefore"/>
        <result column="credited_amount_after" jdbcType="DECIMAL" property="creditedAmountAfter"/>
        <result column="change_amount" jdbcType="DECIMAL" property="changeAmount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="parent_id" jdbcType="INTEGER" property="optUserId"/>
        <result column="opt_type" jdbcType="INTEGER" property="optType"/>
        <result column="opt_user_name" jdbcType="VARCHAR" property="optUserName"/>
        <result column="opt_people_type" jdbcType="INTEGER" property="optPeopleType"/>
        <result column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="relation_order_id" jdbcType="VARCHAR" property="relationOrderId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="modify_user_id" jdbcType="INTEGER" property="modifyUserId"/>
        <result column="modify_user_name" jdbcType="VARCHAR" property="modifyUserName"/>
        <result column="modify_user_type" jdbcType="INTEGER" property="modifyUserType"/>
        <result column="modify_amount_before" jdbcType="DECIMAL" property="modifyAmountBefore"/>
        <result column="modify_amount_after" jdbcType="DECIMAL" property="modifyAmountAfter"/>
        <result column="account_type" jdbcType="INTEGER" property="accountType"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>

    <sql id="sumColumn">
        SELECT SUM(change_amount) AS changeAmount
        FROM gl_proxy_credit_log
    </sql>

    <sql id="timeCondition">
        <if test="startDate != null and endDate != null">
            AND create_time &gt;= #{startDate} AND create_time &lt;= #{endDate}
        </if>
    </sql>

    <!-- 人工清算 -->
    <sql id="artificialCredit">
        WHERE opt_type = #{optType}
        <if test="proxyId != null">
            AND modify_user_id = #{proxyId}
        </if>
        <if test="userName != null">
            AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>

    <!-- 代理上分 -->
    <sql id="proxyCredit">
        WHERE opt_type = #{optType}
        <if test="proxyId != null">
            AND parent_id = #{proxyId}
        </if>
        <if test="userName != null">
            AND opt_user_name != #{userName}
            AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND opt_user_name != #{userName}
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>

    <!-- 公司上分 -->
    <sql id="companyCredit">
        WHERE opt_type IN ( #{companyType},#{proxyType} )
        <if test="proxyId != null">
            AND parent_id != #{proxyId}
            AND modify_user_id = #{proxyId}
        </if>
        <if test="userName != null">
            AND opt_user_name != #{userName}
            AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>

    <!-- 会员上分 -->
    <sql id="payerCredit">
        WHERE opt_type = #{optType}
        <if test="proxyId != null">
            AND proxy_id = #{proxyId}
        </if>
        <if test="userName != null">
            AND opt_user_name != #{userName}
            AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>

    <!-- 余额抵扣上分清算 -->
    <sql id="deductionCredit">
        WHERE opt_type = #{optType}
        <if test="proxyId != null">
            AND proxy_id = #{proxyId}
        </if>
        <if test="userName != null">
            AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>

    <!-- 银行卡充值抵扣上分清算 -->
    <sql id="bankDeductionCredit">
        WHERE opt_type = #{optType}
        <if test="proxyId != null">
            AND proxy_id = #{proxyId}
        </if>
        <if test="userName != null">
            AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>

    <!-- 代充账户转账 -->
    <sql id="balanceTransfer">
        WHERE opt_type = #{optType}
        <if test="proxyId != null">
            AND proxy_id = #{proxyId}
        </if>
        <if test="userName != null">
            AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>

    <!-- 代充账户调整 -->
    <sql id="balanceAdjust">
        WHERE opt_type = #{optType}
        <if test="proxyId != null">
            AND proxy_id = #{proxyId}
        </if>
        <if test="userName != null">
            AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>

    <!-- 所有上分报表 -->
    <sql id="allCredit">
        WHERE 1 = 1
        <if test="proxyId != null">
            AND ( proxy_id = #{proxyId}
            OR (( opt_type = #{companyType} AND modify_user_id = #{proxyId} )
            OR ( opt_type = #{proxyType} AND ( modify_user_id = #{proxyId} OR proxy_id = #{proxyId} ) ) ) )
        </if>
        <if test="userName != null">
                AND modify_user_name = #{userName}
        </if>
        <if test="userNameLike != null">
            AND modify_user_name like CONCAT('%', #{userNameLike}, '%')
        </if>
    </sql>


    <sql id="accountType">
        <if test="accountType != null and accountType != -1">
            AND account_type = #{accountType}
        </if>
    </sql>

    <!-- 根据optType拼接条件 -->
    <sql id="conditionByType">
        <!-- 人工清算 -->
        <if test="optType == 1">
            <include refid="artificialCredit"/>
        </if>
        <!-- 代理上分 -->
        <if test="optType == 2">
            <include refid="proxyCredit"/>
        </if>
        <!-- 公司上分 -->
        <if test="optType == 3">
            <include refid="companyCredit"/>
        </if>
        <!-- 会员上分 -->
        <if test="optType == 4">
            <include refid="payerCredit"/>
        </if>
        <!-- 余额抵扣上分清算 -->
        <if test="optType == 5">
            <include refid="deductionCredit"/>
        </if>
        <!-- 银行卡抵扣上分清算 -->
        <if test="optType == 6">
            <include refid="bankDeductionCredit"/>
        </if>
        <!-- 代充账户转账 -->
        <if test="optType == 7">
            <include refid="balanceTransfer"/>
        </if>
        <!-- 代充账户调整 -->
        <if test="optType == 8">
            <include refid="balanceAdjust"/>
        </if>
        <!-- 查询全部 -->
        <if test="optType == -1">
            <include refid="allCredit"/>
        </if>
        <!-- 帐变类型 -->
        <include refid="accountType"/>
    </sql>

    <!-- 汇总信息查询SQL -->
    <select id="creditSumByType" resultType="java.util.HashMap" parameterType="java.util.HashMap">
        <include refid="sumColumn"/>
        <include refid="conditionByType"/>
        <include refid="timeCondition"/>
    </select>

    <!-- 所有字段 -->
    <sql id="allColumn">
        SELECT
          id                     AS id,
          modify_user_id         AS modifyUserId,
          proxy_id               AS proxyId,
          modify_user_name       AS modifyUserName,
          proxy_user_name        AS proxyUserName,
          credited_amount_before AS creditedAmountBefore,
          credited_amount_after  AS creditedAmountAfter,
          change_amount          AS changeAmount,
          create_time            AS createTime,
          parent_id              AS optUserId,
          opt_type               AS optType,
          opt_user_name          AS optUserName,
          opt_people_type        AS optPeopleType,
          modify_user_type       AS modifyUserType,
          order_id               AS orderId,
          relation_order_id      AS relationOrderId,
          modify_amount_before   AS modifyAmountBefore,
          modify_amount_after    AS modifyAmountAfter,
          account_type           AS accountType,
          remark                 AS remark
        FROM gl_proxy_credit_log
    </sql>

    <!-- 数据信息查询SQL -->
    <select id="allCreditByType" resultType="java.util.HashMap" parameterType="java.util.HashMap">
        <include refid="allColumn"/>
        <include refid="conditionByType"/>
        <include refid="timeCondition"/>
        ORDER BY create_time DESC
    </select>

    <select id="sumChangeAmountByAccountType" resultType="java.util.HashMap" parameterType="map">
        SELECT sum(change_amount) AS changeAmount, account_type AS accountType
        FROM gl_proxy_credit_log
        WHERE opt_type = #{optType} AND proxy_id=#{proxyId}
        GROUP BY account_type;
    </select>

    <select id="sumChangeAmountByOptType" resultType="java.util.HashMap" parameterType="map">
        SELECT
            sum(change_amount) AS changeAmount,
            opt_type AS optType
        FROM gl_proxy_credit_log
        WHERE
            create_time BETWEEN #{startDate} AND #{endDate} AND (proxy_id = #{proxyId} OR modify_user_id = #{proxyId}) GROUP BY opt_type
    </select>

    <select id="findCreditLogs" resultMap="BaseResultMap" parameterType="map">
        SELECT * FROM gl_proxy_credit_log
        WHERE proxy_id=#{proxyId} AND opt_type=#{optType} AND create_time BETWEEN #{startDate} AND #{endDate}
    </select>

    <select id="findFirstMemberPayoutLog" resultMap="BaseResultMap">
        SELECT * FROM gl_proxy_credit_log WHERE modify_user_id = #{uid} AND opt_type = 4 order by create_time ASC limit 1
    </select>

</mapper>