<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seektop.fund.mapper.GlRechargeMapper">

    <resultMap id="BaseResultMap" type="com.seektop.fund.model.GlRecharge">
        <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_type" jdbcType="INTEGER" property="userType"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="coin" jdbcType="VARCHAR" property="coin"/>
        <result column="user_level" jdbcType="VARCHAR" property="userLevel"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="fee" jdbcType="DECIMAL" property="fee"/>
        <result column="keyword" jdbcType="VARCHAR" property="keyword"/>
        <result column="payment_id" jdbcType="INTEGER" property="paymentId"/>
        <result column="channel_id" jdbcType="INTEGER" property="channelId"/>
        <result column="channel_name" jdbcType="VARCHAR" property="channelName"/>
        <result column="merchant_id" jdbcType="INTEGER" property="merchantId"/>
        <result column="merchant_code" jdbcType="VARCHAR" property="merchantCode"/>
        <result column="merchant_name" jdbcType="VARCHAR" property="merchantName"/>
        <result column="bank_id" jdbcType="INTEGER" property="bankId"/>
        <result column="bank_name" jdbcType="VARCHAR" property="bankName"/>
        <result column="client_type" jdbcType="INTEGER" property="clientType"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="limit_type" jdbcType="INTEGER" property="limitType"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="sub_status" jdbcType="INTEGER" property="subStatus"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate"/>
        <result column="app_type" jdbcType="INTEGER" property="appType"/>
        <result column="card_no" jdbcType="VARCHAR" property="cardNo"/>
        <result column="card_username" jdbcType="VARCHAR" property="cardUsername"/>
        <result column="agent_type" jdbcType="INTEGER" property="agentType"/>
    </resultMap>

    <resultMap id="SucResultMap" type="com.seektop.fund.vo.RechargeVO" extends="BaseResultMap">
        <result column="req_create_date" jdbcType="TIMESTAMP" property="sucReqTime"/>
        <result column="req_amount" jdbcType="DECIMAL" property="sucReqAmount"/>
        <result column="req_username" jdbcType="VARCHAR" property="sucReqOperator"/>
        <result column="apv_username" jdbcType="VARCHAR" property="sucApvOperator"/>
        <result column="apv_create_date" jdbcType="TIMESTAMP" property="sucApvTime"/>
        <result column="req_status" jdbcType="INTEGER" property="sucStatus"/>
        <result column="req_remark" jdbcType="VARCHAR" property="sucReqRemark"/>
        <result column="apv_remark" jdbcType="VARCHAR" property="sucApvRemark"/>
    </resultMap>

    <resultMap id="RechargeRecordCollectResultMap" type="com.seektop.fund.vo.GlRechargeAllCollect">
        <result column="depositAmountCollect" property="depositAmountCollect" jdbcType="DECIMAL"/>
        <result column="handlingFeeAmountCollect" property="handlingFeeAmountCollect" jdbcType="DECIMAL"/>
        <result column="arrivalAmountCollect" property="arrivalAmountCollect" jdbcType="DECIMAL"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="RechargeRecordResultMap" type="com.seektop.fund.vo.GlRechargeCollect">
        <result column="depositAmount" property="depositAmount" jdbcType="DECIMAL"/>
        <result column="handlingFeeAmount" property="handlingFeeAmount" jdbcType="DECIMAL"/>
        <result column="arrivalAmount" property="arrivalAmount" jdbcType="DECIMAL"/>
        <result column="coinCode" property="coinCode" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="base_query_param">
        SELECT
        order_id,
        user_id,
        user_type,
        username,
        coin,
        amount,
        fee,
        keyword,
        payment_id,
        channel_id,
        channel_name,
        merchant_id,
        merchant_code,
        merchant_name,
        bank_id,
        bank_name,
        client_type,
        ip,
        status,
        sub_status,
        create_date,
        last_update,
        app_type,
        user_level,
        remark,
        limit_type,
        card_no,
        card_username,
        agent_type
        FROM gl_recharge
    </sql>

    <sql id="query_param_jion">
        SELECT
        re.order_id,
        re.user_id,
        re.user_type,
        re.username,
        re.amount,
        re.fee,
        re.keyword,
        re.payment_id,
        re.channel_id,
        re.channel_name,
        re.merchant_id,
        re.merchant_code,
        re.merchant_name,
        re.bank_id,
        re.bank_name,
        re.client_type,
        re.ip,
        re.status,
        re.sub_status,
        re.create_date,
        re.last_update,
        re.app_type,
        re.user_level,
        re.remark,
        re.limit_type,
        re.card_no,
        re.card_username
        FROM gl_recharge re
        left join gl_recharge_pay pay
        on re.order_id = pay.order_id
    </sql>

    <select id="isFirst" resultType="boolean">
        SELECT
        NOT EXISTS(SELECT 1 FROM gl_recharge WHERE status=1 AND user_id=#{userId})
        AND NOT EXISTS(SELECT 1 FROM gl_proxy_credituse WHERE user_id=#{userId})
        AND NOT EXISTS(SELECT 1 FROM gl_proxy_credit_payout_log WHERE user_id=#{userId}) isFirst
    </select>

    <select id="isFirstForFix" resultType="boolean">
        SELECT
        NOT EXISTS(SELECT 1 FROM gl_recharge WHERE status=1 AND user_id=#{userId} AND
        <![CDATA[create_date < #{startDate}]]>)
        AND NOT EXISTS(SELECT 1 FROM gl_proxy_credituse WHERE user_id=#{userId} AND
        <![CDATA[create_time < #{startDate}]]>)
        AND NOT EXISTS(SELECT 1 FROM gl_proxy_credit_payout_log WHERE user_id=#{userId} AND
        <![CDATA[create_time < #{startDate}]]>) isFirst
    </select>

    <select id="hasDigitalPaySuccess" resultType="boolean">
        SELECT
        EXISTS(SELECT 1 FROM gl_recharge WHERE user_id=#{userId} AND status=1 AND payment_id = 1002 )
        hasDigitalPaySuccess
    </select>

    <select id="selectForUpdate" resultMap="BaseResultMap">
        select * from gl_recharge where order_id = #{orderId} for update
    </select>

    <select id="findLastRecharge" resultMap="BaseResultMap">
        <include refid="base_query_param"></include>
        where user_id = #{userId}
        order by create_date desc
        limit 1
    </select>

    <select id="findRechargeList" parameterType="map" resultMap="BaseResultMap">
        <include refid="query_param_jion"></include>
        where re.sub_status in (1,2) and
        <![CDATA[(pay.create_date >= #{startTime} and  pay.create_date <= #{endTime})]]>
        <if test="merchant != null ">
            and re.channel_id = #{merchant}
        </if>

        <if test="merchantCode != null and merchantCode != ''">
            and re.merchant_code = #{merchantCode}
        </if>

        <if test="channelId != null">
            and re.channel_id = #{channelId}
        </if>
        <if test="coin != null">
            and re.coin = #{coin}
        </if>
    </select>

    <select id="findRechargePendingPageList" resultMap="BaseResultMap"
            parameterType="com.seektop.fund.vo.RechargePendingQueryDto">
        <include refid="base_query_param"></include>
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="orderId == null or orderId == ''">
                <if test="userId != null">
                    and user_id = #{userId}
                </if>
                <if test="userIdList != null">
                    and user_id in
                    <foreach collection="userIdList" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </if>
                <if test="startTime != null and endTime != null">
                    and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
                </if>

                <if test="channelId != null">
                    and channel_id = #{channelId}
                </if>

                <choose>
                    <when test="subStatus != null and subStatus.size() > 0 and status != null and status.size() > 0">
                        and (status in
                        <foreach collection="status" item="item" index="index" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                        or sub_status in
                        <foreach collection="subStatus" item="item" index="index" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                        )
                    </when>
                    <otherwise>
                        <if test="subStatus != null and subStatus.size() > 0">
                            and sub_status in
                            <foreach collection="subStatus" item="item" index="index" open="(" close=")" separator=",">
                                #{item}
                            </foreach>
                        </if>
                        <if test="status != null and status.size() > 0">
                            and status in
                            <foreach collection="status" item="item" index="index" open="(" close=")" separator=",">
                                #{item}
                            </foreach>
                        </if>
                    </otherwise>
                </choose>
                <if test="limitType != -1">
                    and limit_type = #{limitType}
                </if>
                <if test="userType != -1">
                    and user_type = #{userType}
                </if>
            </if>
        </where>
        order by create_date desc
    </select>

    <select id="findRechargeApprovePageList" resultMap="SucResultMap"
            parameterType="com.seektop.fund.vo.RechargeApproveQueryDto">
        select
        req.order_id,
        req.create_date as req_create_date,
        rec.user_id,
        rec.user_type,
        rec.username,
        rec.fee,
        rec.amount,
        rec.limit_type,
        rec.card_username,
        rec.bank_name,
        rec.merchant_name,
        rec.merchant_code,
        req.amount as req_amount,
        req.username as req_username,
        apv.username as apv_username,
        apv.remark as apv_remark,
        apv.create_date as apv_create_date,
        req.status as req_status,
        req.remark as req_remark,
        rec.payment_id,
        rec.channel_id,
        rec.coin
        from
        (select * from gl_recharge_sucreq
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="orderId == null or orderId == ''">
                <if test="startTime != null and endTime != null">
                    and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
                </if>
                <if test="approveStatus != -1 and approveStatus == 0">
                    and status in (1,2)
                </if>
                <if test="approveStatus != -1 and approveStatus == 1">
                    and status = 0
                </if>
                <if test="applicant != null">
                    and username = #{applicant}
                </if>
            </if>
        </where>
        ) as req
        left join
        (select * from gl_recharge_sucapv
        <where>
            <if test="orderId == null or orderId == ''">
                <if test="auditor != null">
                    and username = #{auditor}
                </if>
            </if>
        </where>
        ) as apv on req.order_id = apv.order_id
        left join gl_recharge as rec on req.order_id = rec.order_id
        <where>
            <if test="orderId == null or orderId == ''">
                <if test="userId != null">
                    and rec.user_id = #{userId}
                </if>
                <if test="userIdList != null and userIdList.size() > 0">
                    and rec.user_id in
                    <foreach collection="userIdList" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </if>
                <if test="userName != null">
                    and rec.username = #{userName}
                </if>
                <if test="limitType != -1">
                    and rec.limit_type = #{limitType}
                </if>
                <if test="userType != -1">
                    and rec.user_type = #{userType}
                </if>
                <if test="auditor != null">
                    and apv.username = #{auditor}
                </if>
                <if test="coinCode != null and coinCode != '-1'">
                    and rec.coin = #{coinCode}
                </if>
            </if>
        </where>
        order by req_create_date desc
    </select>

    <select id="findRechargePageList" resultMap="BaseResultMap" parameterType="com.seektop.fund.vo.RechargeQueryDto">
        <choose>
            <!--充值时间-->
            <when test="dateType !=null and dateType == 1">
                <include refid="base_query_param"></include>
                <where>
                    <include refid="recharge_list_when_where"></include>
                </where>
                <choose>
                    <when test="orderByClause != null ">
                        order by ${orderByClause} ${sortStr}
                    </when>
                    <otherwise>
                        order by create_date desc
                    </otherwise>
                </choose>
            </when>
            <!--到账时间-->
            <otherwise>
                <include refid="base_query_param"></include>
                <where>
                    <include refid="recharge_list_otherwise_where"/>
                </where>
                order by last_update desc
            </otherwise>
        </choose>
    </select>



    <sql id="recharge_query_field">
        SELECT
        recharge.order_id,
        recharge.user_id,
        recharge.user_type,
        recharge.username,
        recharge.amount,
        recharge.fee,
        recharge.keyword,
        recharge.payment_id,
        recharge.channel_id,
        recharge.channel_name,
        recharge.merchant_id,
        recharge.merchant_code,
        recharge.merchant_name,
        recharge.bank_id,
        recharge.bank_name,
        recharge.client_type,
        recharge.ip,
        recharge.status,
        recharge.sub_status,
        recharge.create_date,
        recharge.last_update,
        recharge.app_type,
        recharge.user_level,
        recharge.remark,
        recharge.limit_type,
        recharge.card_no,
        recharge.card_username,
        rp.amount as payAmount,
        rp.pay_date as payTime,
        rp.third_order_id as thirdOrderId
    </sql>

    <sql id="recharge_list_when_where">
        <!--订单号搜索-->
        <if test="orderId != null and orderId != ''">
            and order_id = #{orderId}
        </if>
        <if test="needName == 1">
            and user_id = #{userId}
        </if>
        <!-- 非订单号搜索，注意索引 -->
        <if test="orderId == null or orderId == ''">
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="userIdList != null and userIdList.size() > 0">
                and user_id in
                <foreach collection="userIdList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="startTime != null and endTime != null">
                and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
            </if>
            <if test="paymentIdList != null and paymentIdList.size() > 0">
                and payment_id in
                <foreach collection="paymentIdList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="channelId != null">
                and channel_id = #{channelId}
            </if>
            <if test="userType != -1">
                and user_type = #{userType}
            </if>
            <if test="coinCode != null and coinCode != '-1'">
                and coin = #{coinCode}
            </if>
            <if test="txHash != null and txHash != ''">
                and tx_hash = #{txHash}
            </if>
            <choose>
                <when test="subStatus != null and subStatus.size() > 0 and status != null and status.size() > 0">
                    and (status in
                    <foreach collection="status" item="item" index="index" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                    and sub_status in
                    <foreach collection="subStatus" item="item" index="index" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                    )
                </when>
                <otherwise>
                    <if test="subStatus != null and subStatus.size() > 0">
                        and sub_status in
                        <foreach collection="subStatus" item="item" index="index" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                    </if>
                    <if test="status != null and status.size() > 0">
                        and status in
                        <foreach collection="status" item="item" index="index" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                    </if>
                </otherwise>
            </choose>
            <if test="cardUsername != null">
                and card_username = #{cardUsername}
            </if>
            <if test="clientTypeList != null and clientTypeList.size() > 0">
                and client_type in
                <foreach collection="clientTypeList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="agentType != null and  agentType != -1">
                and agent_type = #{agentType}
            </if>
            <if test="fromUsername != null and  fromUsername != ''">
                and keyword like CONCAT(#{fromUsername} , '||%')
            </if>

        </if>
    </sql>

    <sql id="recharge_list_otherwise_where">
        <!--订单号搜索-->
        <if test="orderId != null and orderId != ''">
            and order_id = #{orderId}
        </if>
        <!-- 非订单号搜索，注意索引 -->
        <if test="orderId == null or orderId == ''">
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="userIdList != null and userIdList.size() > 0">
                and user_id in
                <foreach collection="userIdList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>

            <!-- 到账时间 last_update-->
            <if test="startTime != null and endTime != null">
                and <![CDATA[(last_update >= #{startTime} and  last_update <= #{endTime})]]>
            </if>

            <if test="paymentIdList != null and paymentIdList.size() > 0">
                and payment_id in
                <foreach collection="paymentIdList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="channelId != null">
                and channel_id = #{channelId}
            </if>
            <if test="userType != -1">
                and user_type = #{userType}
            </if>
            <if test="succStatus == -1">
                and status = 1
            </if>
            <if test="succStatus == 1">
                and status = 1 and sub_status != 2
            </if>
            <if test="succStatus == 2">
                and status = 1 and sub_status = 2
            </if>
            <if test="cardUsername != null">
                and card_username = #{cardUsername}
            </if>
            <if test="clientTypeList != null and clientTypeList.size() > 0">
                and client_type in
                <foreach collection="clientTypeList" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="agentType != null and agentType != -1">
                and agent_type = #{agentType}
            </if>
            <if test="fromUsername != null and  fromUsername != ''">
                and keyword like CONCAT(#{fromUsername} ,  '||%')
            </if>
            <if test="coinCode != null and coinCode != '-1'">
                and coin = #{coinCode}
            </if>
            <if test="txHash != null and txHash != ''">
                and tx_hash = #{txHash}
            </if>
        </if>
    </sql>

    <update id="updateForRequest">
        update gl_recharge
        <trim prefix="SET" suffixOverrides=",">
            <if test="recharge.status != null and recharge.status != ''">
                status = #{recharge.status},
            </if>
            <if test="recharge.fee != null and recharge.fee != ''">
                fee = #{recharge.fee},
            </if>
            <if test="recharge.cardUsername != null and recharge.cardUsername != ''">
                card_username = #{recharge.cardUsername},
            </if>
            <if test="recharge.bankId != null and recharge.bankId != ''">
                bank_id = #{recharge.bankId},
            </if>
            <if test="recharge.bankName != null and recharge.bankName != ''">
                bank_name = #{recharge.bankName},
            </if>
            <if test="recharge.subStatus == null">
                sub_status = null,
            </if>
        </trim>
        where order_id = #{recharge.orderId}
        and (status = 0 OR status = 2)
    </update>

    <select id="findRechargeRecordAmount" resultMap="RechargeRecordResultMap"
            parameterType="com.seektop.fund.vo.RechargeQueryDto">
        SELECT coin as coinCode,
        amount as depositAmount,
        fee AS handlingFeeAmount
        FROM gl_recharge
        <where>
            <choose>
                <when test="dateType !=null and dateType == 1">
                    <include refid="recharge_list_when_where"></include>
                </when>
                <otherwise>
                    <include refid="recharge_list_otherwise_where"/>
                </otherwise>
            </choose>
        </where>
    </select>
    <!-- 查询充值订单总额 -->
    <select id="findRechargeRecordPayAmount" resultMap="RechargeRecordResultMap"
            parameterType="com.seektop.fund.vo.RechargeQueryDto">
        <choose>
            <!--充值时间-->
            <when test="dateType !=null and dateType == 1">
                select grp.coin as coinCode,
                IFNULL(pay.amount,0) AS depositAmount,
                IFNULL(pay.fee,0) AS handlingFeeAmount
                from
                (select order_id,coin from gl_recharge
                <where>
                    status = 1
                    <include refid="recharge_list_when_where"/>
                    <if test="subStatus != null and subStatus.size() > 0">
                        and sub_status in
                        <foreach collection="subStatus" item="item" index="index" open="(" close=")"
                                 separator=",">
                            #{item}
                        </foreach>
                    </if>
                </where>
                ) grp
                LEFT JOIN gl_recharge_pay pay on pay.order_id = grp.order_id
            </when>
            <!--到账时间-->
            <otherwise>
                select glr.coin as coinCode,
                IFNULL(rp.amount,0) AS depositAmount,
                IFNULL(rp.fee,0) AS handlingFeeAmount
                FROM
                (SELECT
                order_id,coin
                FROM
                gl_recharge
                <where>
                    status = 1
                    <include refid="recharge_list_otherwise_where"/>
                    <if test="subStatus != null and subStatus.size() > 0">
                        and sub_status in
                        <foreach collection="subStatus" item="item" index="index" open="(" close=")"
                                 separator=",">
                            #{item}
                        </foreach>
                    </if>
                </where>
                ) glr
                LEFT JOIN gl_recharge_pay rp ON glr.order_id = rp.order_id
            </otherwise>
        </choose>
    </select>

    <sql id="base_query_condition">
        <if test="orderId != null">
            and order_id = #{orderId}
        </if>
        <if test="userId != null">
            and user_id = #{userId}
        </if>
        <if test="idList != null">
            and user_id in
            <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <!--充值时间-->
        <if test="dateType !=null and dateType == 1">
            <if test="startTime != null and startTime !=''">
                and create_date &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime !=''">
                and create_date &lt;= #{endTime}
            </if>
        </if>

        <if test="paymentId != null and paymentId != -1">
            <choose>
                <when test="paymentId != null and (paymentId == -2 or paymentId == -3)">
                    and payment_id in
                    <foreach collection="paymentIdList" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </when>
                <otherwise>
                    and payment_id = #{paymentId}
                </otherwise>
            </choose>
        </if>

        <if test="merchant != null ">
            and channel_id = #{merchant}
        </if>
        <if test="userType != null and userType != -1">
            and user_type = #{userType}
        </if>
        <if test="clientType != null">
            and client_type = #{clientType}
        </if>
        <if test="level != null">
            and user_level in
            <foreach collection="level" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="limitType != null and limitType != -1">
            and limit_type = #{limitType}
        </if>
        <choose>
            <when test="subStatus != null and status != null">
                and (status in
                <foreach collection="status" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                or sub_status in
                <foreach collection="subStatus" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                )
            </when>
            <otherwise>
                <if test="subStatus != null">
                    and sub_status in
                    <foreach collection="subStatus" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </if>
                <if test="status != null">
                    and status in
                    <foreach collection="status" item="id" index="index" open="(" close=")" separator=",">
                        #{id}
                    </foreach>
                </if>
            </otherwise>
        </choose>
    </sql>


    <!-- 统计充值记录金额手续费到账金额 -->
    <select id="memberRechargeTotal" resultMap="RechargeRecordResultMap"
            parameterType="com.seektop.fund.vo.RechargeQueryDto">
        select recharge.coin as coinCode,
        IFNULL(recharge.amount,0) as depositAmount,
        IFNULL(pay.fee,0) as handlingFeeAmount,
        IFNULL(pay.amount,0) as arrivalAmount
        from (
        select order_id,amount,coin from gl_recharge
        <where>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="orderId == null or orderId == ''">
                <if test="userId != null">
                    and user_id = #{userId}
                </if>
                <if test="startTime != null and endTime != null">
                    and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
                </if>
                <if test="paymentIdList != null and paymentIdList.size() > 0">
                    and payment_id in
                    <foreach collection="paymentIdList" item="item" index="index" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </if>
                <if test="channelId != null">
                    and channel_id = #{channelId}
                </if>
                <if test="merchantId != null">
                    and merchant_id = #{merchantId}
                </if>
                <choose>
                    <when test="subStatus != null and subStatus.size() > 0 and status != null and status.size() > 0">
                        and (status in
                        <foreach collection="status" item="item" index="index" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                        or sub_status in
                        <foreach collection="subStatus" item="item" index="index" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                        )
                    </when>
                    <otherwise>
                        <if test="subStatus != null and subStatus.size() > 0">
                            and sub_status in
                            <foreach collection="subStatus" item="item" index="index" open="(" close=")"
                                     separator=",">
                                #{item}
                            </foreach>
                        </if>
                        <if test="status != null and status.size() > 0">
                            and status in
                            <foreach collection="status" item="item" index="index" open="(" close=")" separator=",">
                                #{item}
                            </foreach>
                        </if>
                    </otherwise>
                </choose>
                <if test="clientTypeList != null and clientTypeList.size > 0">
                    and client_type in
                    <foreach collection="clientTypeList" item="item" index="index" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </if>
            </if>
        </where>
        ) recharge
        LEFT JOIN gl_recharge_pay pay on pay.order_id = recharge.order_id
    </select>

    <select id="sumAmountByUserId" resultType="decimal">
        SELECT
        IFNULL(SUM(amount), 0) AS totalAmount
        FROM
        gl_recharge
        WHERE
        user_id = #{userId}
        and <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
        and status = 1
    </select>

    <select id="selectFixData" resultMap="BaseResultMap">
        select * from gl_recharge
        where
        <![CDATA[(create_date >= #{startTime} and create_date <= #{endTime})]]>
        and status = 1
        order by create_date desc
        limit #{page},#{size}
    </select>

    <select id="selectRechargeActivity" resultMap="BaseResultMap">
        select * from gl_recharge
        where
        <![CDATA[(create_date >= #{startTime} and create_date <= #{endTime})]]>
        and status = 1 and payment_id = #{paymentId}
        order by create_date desc
        limit #{page},#{size}
    </select>

    <delete id="cleanRechargeData">
        delete from gl_recharge
        where <![CDATA[(create_date >= #{startTime} and  create_date <= #{endTime})]]>
        <if test="status != null">
            and status != 1
        </if>
        limit 500
    </delete>

    <select id="findUserFirstRecharge" resultMap="BaseResultMap">
        select * from gl_recharge
        where
        user_id = #{userId}
        and status = 1
        order by create_date asc
        limit 1
    </select>

    <select id="queryPendingCount" resultType="integer">
        select count(*)
        from gl_recharge
        where status = 0
          and payment_id = #{paymentId}
          and merchant_id = #{merchantId}
          and amount = #{amount}
    </select>

    <select id="findForRebate" resultMap="BaseResultMap" >
        select user_id,username,order_id,amount,last_update,payment_id,last_update
        from gl_recharge
        where status = 1
        and user_type = 0
        and last_update &gt; #{startTime}
        and last_update &lt; #{endTime}
    </select>

    <select id="queryCount" resultType="integer">
        select count(*)
        from gl_recharge
        where <![CDATA[(create_date >= #{startTime} and create_date <= #{endTime})]]>
        and merchant_id = #{merchantId}
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="paymentId != null">
            and payment_id = #{paymentId}
        </if>
    </select>

    <select id="queryMerchantCount" resultType="com.seektop.fund.vo.RechargeCountVO">
        select IFNULL(count(1),0) as count , merchant_id as merchantId
        from gl_recharge
        where <![CDATA[(create_date >= #{startTime} and create_date <= #{endTime})]]>
        <if test="merchantIds != null and merchantIds.size > 0">
            and merchant_id in
            <foreach collection="merchantIds" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="paymentId != null">
            and payment_id = #{paymentId}
        </if>
        group by merchant_id
    </select>
</mapper>